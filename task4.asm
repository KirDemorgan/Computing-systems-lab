LXI H, 0x002A    ; HL указывает на начало массива (адрес 002Ah)
MVI A, 0         ; Обнуляем аккумулятор
MOV B, A         ; Регистр B = 0 (счётчик итераций)
MOV C, A         ; Регистр C = 0 (сумма для нечетных индексов)
MOV D, A         ; Регистр D = 0 (сумма для четных индексов)

SUM_LOOP:
    MOV A, B       ; Загружаем счетчик итераций в аккумулятор
    CPI 10         ; Сравниваем с общим числом элементов (10)
    JZ END         ; Если B = 10, завершаем цикл

    MOV A, B       ; Загружаем индекс элемента (B) в A
    ANI 1         ; Изолируем младший бит, чтобы проверить четность индекса
    JZ EVEN_INDEX ; Если результат равен 0, индекс четный -> переход в EVEN_INDEX
ODD_INDEX:
    MOV E, M       ; Сохраняем число из массива во временный регистр E
    MOV A, C       ; Загружаем текущую сумму для нечетных индексов из C
    ADD E        ; Прибавляем к сумме значение текущего элемента
    MOV C, A       ; Обновляем сумму нечетных индексов
    JMP NEXT       ; Переход к следующей итерации

EVEN_INDEX:
    MOV E, M       ; Сохраняем число из массива во временный регистр E
    MOV A, D       ; Загружаем текущую сумму для четных индексов из D
    ADD E        ; Прибавляем значение текущего элемента
    MOV D, A       ; Обновляем сумму четных индексов

NEXT:
    INX H          ; Переходим к следующему элементу массива (HL = HL + 1)
    INR B          ; Увеличиваем счетчик итераций (B += 1)
    JMP SUM_LOOP   ; Повторяем цикл

END:
    MOV M, D       ; Сохраняем сумму четных индексов по текущему адресу HL
    INX H          ; Переходим к следующей ячейке
    MOV M, C       ; Сохраняем сумму нечетных индексов
    HLT            ; Остановка процессора

ORG 0x002A
DB 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
