LXI H, 0x002A    ; HL указывает на адрес 002Ah (начало массива)
MVI A, 0         ; Обнуляем аккумулятор
MOV B, A         ; Регистр B = 0 (счётчик итераций)
MOV C, A         ; Регистр C = 0 (сумма нечётных чисел)
MOV D, A         ; Регистр D = 0 (сумма чётных чисел)

SUM_LOOP:
    MOV A, B      ; Загружаем счётчик (B) в аккумулятор
    CPI 10        ; Сравниваем B с 10
    JZ END        ; Если B = 10, завершаем цикл

    MOV A, M      ; Загружаем число из памяти в A
    ORA A         ; Обновляем флаги (для проверки чётности)
    JPE EVEN      ; Если число чётное (флаг паритета = 1), переходим к EVEN

ODD:
    MOV A, C      ; Загружаем сумму нечётных чисел (C) в A
    ADD M         ; Добавляем текущее число (нечётное)
    MOV C, A      ; Сохраняем новую сумму в C
    JMP NEXT      ; Переходим к обновлению счётчика

EVEN:
    MOV A, D      ; Загружаем сумму чётных чисел (D) в A
    ADD M         ; Добавляем текущее число (чётное)
    MOV D, A      ; Сохраняем новую сумму в D

NEXT:
    INX H         ; Переходим к следующему элементу массива
    INR B         ; Увеличиваем счётчик итераций (B += 1)
    JMP SUM_LOOP  ; Повторяем цикл

END:
    MOV M, D      ; Сохраняем сумму чётных чисел (D) по адресу HL
    INX H         ; Переходим к следующей ячейке памяти
    MOV M, C      ; Сохраняем сумму нечётных чисел (C) по новому адресу
    HLT           ; Остановка процессора